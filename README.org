#+TITLE: How to install Python for Python learners?

* Context

Imagine a class of engineering students need to learn Python programming.
Ideally, (i) their university provides a Python environment and (ii) they can
install the same (or very similar) Python environment on their laptops.

These students may not be computer science students and thus not be confident to
operate with a command prompt (or know where to find it).


* Requirements

** Supported operating systems
Ideally, the Python environment could be installed on the major three operating
systems (Linux, MacOS, Windows) because the students are likely to have a
variety of operating systems.

Those using Linux are generally the smallest problem because (i) there are not
many of them and (ii) they tend to be technically more experienced.

** Python packages

For a beginners course touching on data science, common requirements are:

- a recent ~python~ (for example 3.12)
- numerical and data science libraries: ~numpy, scipy, pandas~
- plotting ~matplotlib~
- an IDE (~spyder~)
- Jupyter notebook and lab (~jupyter~)
- to support testing ~pytest~
- for pep8 compliance ~pycodestyle~, and one of ~black~, ~ruff~ 

* Anaconda

In the past, the Anaconda distribution was an attractive choice. It installs
smoothly on Windows, MacOS and Linux, and provides a comprehensive collection of
Python tools that cover all teaching needs.

However, due to the change in licensing, it might be beneficial not to start
with Anaconda as those students who drift into research or want to use their
Python skills in a non-teaching organisation would later need to pay license
fees (that's okay) or without noticing violate the license agreement (that's not
okay).

The question is: how can we provide these Python tools to the students in the
smoothest possible way and enable them to install them themselves?

* Alternatives

** miniforge
[to be added]
** pixi
[to be added]

